<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net45;netstandard1.6;netstandard2.0;</TargetFrameworks>
        <AssemblyName>CairoSharp</AssemblyName>
        <PackageId>SharpCairo</PackageId>
        <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
        <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
        <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
        <Version>1.15.12-alpha</Version>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
        <Description>Cairo Graphics Library -- .Net Standard 2.0 wrapper

Cairo is designed to produce consistent output on all output media while taking advantage of display hardware acceleration when available.
The cairo API provides operations similar to the drawing operators of PostScript and PDF.
Operations in cairo including stroking and filling cubic Bézier splines, transforming and compositing translucent images, and antialiased text rendering.
All drawing operations can be transformed by any affine transformation (scale, rotation, shear, etc.).</Description>
        <PackageIconUrl>http://cairographics.org/cairo-banner.png</PackageIconUrl>
        <PackageIcon>icon.png</PackageIcon>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/zwcloud/CairoSharp</RepositoryUrl>
        <PackageProjectUrl>https://github.com/zwcloud/CairoSharp</PackageProjectUrl>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageTags>cairo graphics svg png vector-graphics vector</PackageTags>
        <PackageReleaseNotes>This is a test-only release of CairoSharp for cairo v1.15.12.
Package renamed to SharpCairo differ from CairoSharp provided by GTK#.</PackageReleaseNotes>
        <RunPostBuildEvent>Always</RunPostBuildEvent>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <Authors>CairoSharp's contributors</Authors>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net45|AnyCPU'">
      <DefineConstants>TRACE;DEBUG</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net45|AnyCPU'">
      <DefineConstants>TRACE</DefineConstants>
    </PropertyGroup>

		<ItemGroup>
			<None Include="icon.png" Pack="true" Visible="false" PackagePath="" />
			<None Include="..\..\LICENSE" Pack="true" PackagePath="" />
		</ItemGroup>
		<ItemGroup>
        <Content Include="..\Native\Output\bin\win-x64\cairo.dll" PackagePath="runtimes\win-x64\native" Visible="false" />
        <Content Include="..\Native\Output\bin\win-x86\cairo.dll" PackagePath="runtimes\win-x86\native" Visible="false" />
        <Content Include="..\Native\stubs\linux-x64\libcairo.so" PackagePath="runtimes\linux-x64\native" Visible="false" />
        <Content Include="..\Native\stubs\linux-arm\libcairo.so" PackagePath="runtimes\linux-arm\native" Visible="false" />
        <Content Include="SharpCairo.props" PackagePath="build\net45" />
    </ItemGroup>

    <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
      <Exec Command="&quot;$(SolutionDir)source\Native\Output\NativeLibraryCopier.exe&quot; #$(SolutionDir),$(ConfigurationName),$(PlatformName),$(TargetDir)#" />
    </Target>
</Project>